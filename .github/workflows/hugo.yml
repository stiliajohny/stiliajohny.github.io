# Sample workflow for building and deploying a Hugo site to GitHub Pages
name: Deploy Hugo site to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["master"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

# Default to bash
defaults:
  run:
    shell: bash

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    env:
      HUGO_VERSION: 0.108.0
    steps:
      - name: Install Hugo CLI
        run: |
          wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb \
          && sudo dpkg -i ${{ runner.temp }}/hugo.deb
      - name: Install Dart Sass Embedded
        run: sudo snap install dart-sass-embedded
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v2
      - name: Install Node.js dependencies
        run: "[[ -f package-lock.json || -f npm-shrinkwrap.json ]] && npm ci || true"
      - name: Build with Hugo
        env:
          # For maximum backward compatibility with Hugo modules
          HUGO_ENVIRONMENT: production
          HUGO_ENV: production
        run: |
          hugo \
            --minify \
            --baseURL "${{ steps.pages.outputs.base_url }}/"
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: ./public

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1

  sitemap-ping:
    name: Google Sitemap Ping
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout Repository"
        uses: actions/checkout@v2
      - name: ping
        env:
          MAP_URL: "NULL" # set custom URL if you use it
        run: |
          BASE_URL="https://indraft.blog"
          MAP_URL="${BASE_URL}/sitemap.xml"
          RSS_URL="${BASE_URL}/index.xml"
          sleep 3
          curl -v "http://www.google.com/ping?sitemap=${MAP_URL}" &> /dev/null &
          curl -v "http://www.bing.com/ping?sitemap=${RSS_URL}" &> /dev/null &
          curl -v "http://www.google.com/ping?sitemap=${MAP_URL}" &> /dev/null &
          curl -v "http://www.bing.com/ping?sitemap=${RSS_URL}" &> /dev/null &
          wait
          echo "Done"

  slack-notification:
    runs-on: ubuntu-latest
    name: Slack Notification
    needs: sitemap-ping
    steps:
      - name: Slack Notification
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_CHANNEL: github
          SLACK_COLOR: ${{ job.status }} # or a specific color like 'good' or '#ff00ff'
          SLACK_ICON: https://github.com/rtCamp.png?size=48
          SLACK_MESSAGE: "Deployed to GitHub Pages.\n check it out here: https://indraft.blog"
          SLACK_TITLE: Deployment successful
          SLACK_USERNAME: "Hugo Deploy"
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}