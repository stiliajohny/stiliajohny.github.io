name: Hugo github pages


on:
  pull_request:
  push:

jobs:
  hugo:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Run Hugo
        uses: crazy-max/ghaction-hugo@v1
        with:
          version: latest
          extended: true
          args: --cleanDestinationDir --minify --verbose
      -
        name: Deploy to GitHub Pages
        if: success() && github.event_name != 'pull_request'
        uses: crazy-max/ghaction-github-pages@v2
        with:
          target_branch: gh-pages
          build_dir: docs
        env:
          GITHUB_TOKEN: ${{ secrets.HUGO_TOKEN }}


# jobs:
#   build:
#     runs-on: ubuntu-latest
#     steps:
#     - uses: actions/checkout@master
#       with:
#         submodules: recursive
#     - uses: jakejarvis/hugo-build-action@master  # ...or replace 'master' with a full version tag, such as: v0.64.1
#       with:
#         args: --minify
#     - uses: actions/upload-artifact@master
#       with:
#         name: website
#         path: './public'



# jobs:
#   build:
#     name: Deploy
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout master
#         uses: actions/checkout@v1

#       - name: Deploy the site
#         uses: benmatselby/hugo-deploy-gh-pages@master
#         env:
#           HUGO_VERSION: 0.91.2
#           TARGET_REPO: benmatselby/benmatselby.github.io
#           TARGET_BRANCH: master
#           TOKEN: ${{ secrets.Hugo_TOKEN }}
#           # HUGO_ARGS: '-t academic'
#           CNAME: benmatselby.github.io

  # sitemap-ping:
  #   name: Google Sitemap Ping
  #   needs: hugo-deploy
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: "Checkout Repository"
  #       uses: actions/checkout@v2
  #     - name: ping
  #       env:
  #         MAP_URL: "NULL" # set custom URL if you use it
  #       run: |
  #         BASE_URL="https://stiliajohny.github.io"
  #         MAP_URL="${BASE_URL}/sitemap.xml"
  #         RSS_URL="${BASE_URL}/index.xml"
  #         sleep 3
  #         curl -v "http://www.google.com/ping?sitemap=${MAP_URL}" &> /dev/null &
  #         curl -v "http://www.bing.com/ping?sitemap=${RSS_URL}" &> /dev/null &
  #         curl -v "http://www.google.com/ping?sitemap=${MAP_URL}" &> /dev/null &
  #         curl -v "http://www.bing.com/ping?sitemap=${RSS_URL}" &> /dev/null &
  #         wait
  #         echo "Done"